@model IEnumerable<Bastion.Models.Reaper.Account>

<table class="table table-striped table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Username)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TenantId)
        </th>
        <th>
            Compute
        </th>
        <th>
            Images
        </th>
        <th>
            Block Storage
        </th>
        <th>
            Networks
        </th>
        <th>
            Object Storage
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Username, "Details", new { id = item.Id }) 
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TenantId)
            </td>
            <td>
                @ShowUsageStatus(@item.Usage.Compute.CurrentUsageStatus().ToString())
            </td>
            <td>
                @ShowUsageStatus(@item.Usage.Images.CurrentUsageStatus().ToString())
            </td>
            <td>
                @ShowUsageStatus(@item.Usage.BlockStorage.CurrentUsageStatus().ToString())
            </td>
            <td>
                @ShowUsageStatus(@item.Usage.Networks.CurrentUsageStatus().ToString())
            </td>
            <td>
                <span class="label label-info">N/A</span>
            </td>
        </tr>
    }

</table>

@helper ShowUsageStatus(string status)
{
    if (status == "Ok")
    {
        <span class="label label-success">OK</span>
    }
    else if (status == "Warning")
    {
        <span class="label label-warning">Warning</span>
    }
    else if (status == "OverLimit")
    {
        <span class="label label-danger">Over Limit</span>
    }
    else
    {
        <span class="label label-default">Unknown</span>
    }

}
